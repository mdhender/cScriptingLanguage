<html><head><title>CSL Reference&nbsp-&nbsp;Writing libraries</title>
<meta name="description" content="Writing libraries">
<meta name="keywords" content="PROGRAMMING CSL C SCRIPT SCRIPTING LANGUAGE IBK ORACLE MYSQL DB2 ODBC VISUALAGE BORLAND VISUAL C++ GCC">
</head>
<body leftmargin="10" topmargin="2"
text="#000000" bgcolor="#FFFFFF" link="#002288" vlink="#444444" alink="#FF2200">
<div align="center">
<a name="top"></a>
<!-- upper -->
<table border="0" cellspacing="0" cellpadding="0" width="100%">
<tr>
<td></td>
<td width="5">&nbsp;</td>
<td width="150">
<a href="index.htm"><img src="../img/csl.png" width="97" height="56" border="0"></a>
</td>
<td width="300%" align="center" valign="bottom">
<h1>Writing libraries</h1>
</td>
<td width="150" align="right">
<table border="0" cellspacing="0" cellpadding="0">
<tr><td nowrap align="right" valign="top"><font size="-2"><b>
C&nbsp;Scripting&nbsp;Language<br>
Reference&nbsp;Manual<br>
Version&nbsp;4.4.0<br></b>
<br>&lt;&lt;&nbsp;<a href="capi2.htm">Back</a>&nbsp;&nbsp;<a href="#end">End</a>&nbsp;&nbsp;<a href="capi41.htm">Next</a>&nbsp;&gt;&gt;<br>
</font>
</td></tr>
</table>
</td>
<td width="5">&nbsp;</td>
<td></td>
</tr>
</table>
<table border="0" cellspacing="0" cellpadding="0" width="100%">
<!-- fine line  -->
<tr valign="bottom">
<td></td>
<td width="5"><img src="../img/1pix.png" width="1" height="1"></td>
<td width="150" bgcolor="#0044AA"><img src="../img/1pix.png" width="1" height="1"></td>
<td width="10" bgcolor="#0044AA"><img src="../img/1pix.png" width="1" height="1"></td>
<td width="300%" bgcolor="#0044AA"><img src="../img/1pix.png" width="1" height="1"></td>
<td width="5"><img src="../img/1pix.png" width="1" height="1"></td>
<td></td>
</tr>
<!-- space -->
<tr>
<td colspan="9"><img src="../img/1pix.png" width="1" height="1" vspace="4"></td>
</tr>
<!-- left column -->
<tr valign="top">
<td></td>
<td>&nbsp;</td>
<td bgcolor="#E0E0E0" width="150">
<table cellspacing="0" cellpadding="2" border="0" width="100%">
<tr>
<td nowrap bgcolor="#0044AA"><b><font color="#FFFFFF">INDEX</font></b></td>
</tr>
<tr>
<td nowrap><font size="-1">
<a href="intro1.htm">Introduction</a><br>
<a href="inst1.htm">Installation</a><br>
<a href="using1.htm">Using the CSL executive</a><br>
<a href="lang1.htm">Language</a><br>
<a href="direct1.htm">Directives</a><br>
<a href="sys1.htm">System library</a><br>
<a href="str1.htm">String library</a><br>
<a href="math1.htm">Math library</a><br>
<a href="rex1.htm">Regular expression lib.</a><br>
<a href="file1.htm">File library</a><br>
<a href="dax1.htm">Database library</a><br>
<a href="comm1.htm">Async Communication</a><br>
<a href="prf1.htm">Registry/Profile handling</a><br>
<a href="win1.htm">Windows control</a><br>
<a href="capi1.htm">C API</a><br>
&nbsp;&nbsp;&nbsp;<a href="capi2.htm">Embedding CSL</a><br>
&nbsp;&nbsp;&nbsp;<a href="capi3.htm">Writing libraries</a><br>
&nbsp;&nbsp;&nbsp;<a href="capi41.htm">API reference</a><br>
<a href="api1.htm">C++ Class Interface</a><br>
<a href="link1.htm">CSL links</a><br>
</font></td>
</tr>
</table>
</td>
<!-- main column -->
<td>&nbsp;&nbsp;</td>
<td width="300%">
<p>
Writing a CSL library is easy and gives you the opportunity to provide
a professional script interface to your application.
</p><p>
You should make yourself familiar with the concept of DLL's or shared libraries
in your compiler documentation. For your convenience you can consult the files
<i>build.bat</i> / <i>build.cmd</i> / <i>build</i> in the <i>Samples\API</i>
subdirectories to see what compiler and linker switches are required.
</p><p>
Your library must export 2 entries: <i>ZCslInitLib</i> and <i>ZCslCleanupLib</i>.
</p><p>
<i>ZCslInitLib</i> is called when the DLL gets loaded. You use the API to
define global var's and const's and load functions at startup. <i>ZCslCleanupLib</i>
will be called when the DLL is unloaded so you can perform any tidy up before
the CSL handle is closed.
</p><p>
You will find this sample library <i>MyLib.c</i> in the
<i>Samples\API\Source</i> directory. Use the sample as a starting point
for your own DLL's:
</p><pre>
#include &lt;stdlib.h&gt;
#include &lt;stdio.h&gt;
#include &lt;ZCslApi.h&gt;
&nbsp;
/*
 * c h e c k N u m b e r
 *
 * Check if string represents a number
 */
static int checkNumber(char *s)
{
   int any;
   any = 0;
   if (*s=='-' || *s=='+') s++;
   while ('0'&lt;=*s && *s&lt;='9') { s++; any = 1; }
   if (*s=='.') s++;
   while ('0'&lt;=*s && *s&lt;='9') s++;
   return any && *s == 0;
} /* checkNumber */
&nbsp;
/*
 * a v e r a g e
 *
 * Sample CSL function calculating the average of up 5 numbers
 */
ZExportAPI(void) average(ZCslHandle aCsl)
{
   double sum;
   long bufsiz;
   int argCount, i;
   char buf[40], name[4];
&nbsp;
   /* get actual # of arguments */
   bufsiz = sizeof(buf);
   ZCslGet(aCsl, &quot;argCount&quot;, buf, &bufsiz);
   argCount = atoi(buf);
&nbsp;
   /* calculate sum of all arguments */
   sum = 0.0;
   for (i = 0; i &lt; argCount; i++) {
      /* create name of parameter */
      sprintf(name, &quot;p%d&quot;, i+1);
&nbsp;
      /* get argument */
      bufsiz = sizeof(buf);
      if ( ZCslGet(aCsl, name, buf, &bufsiz) ) return; /* (1) */
&nbsp;
      /* check for number */
      if (!checkNumber(buf)) {
         sprintf(buf, &quot;argument %d is no number!&quot;, i);
         ZCslSetError(aCsl, buf, -1); /* (2) */
      } /* if */
&nbsp;
      sum += atof(buf);
   } /* for */
&nbsp;
   /* return result */
   sprintf(buf, &quot;%f&quot;, sum / argCount);
   ZCslSetResult(aCsl, buf, -1); /* (2) */
} /* average */
&nbsp;
/*
 * i n i t i a l i z e
 *
 * initialize csl library at load time
 */
ZCslInitLib(csl)
{
   static char* module = &quot;MyLib&quot;;    /* module name */
   long errs;
&nbsp;
   /* define a global constant by loading a script */
   errs = ZCslLoadScriptMem(
      csl,                               /* csl handle */
      module,                            /* module name */
      &quot;const myVersion = 1.0;\n&quot;        /* script source */
   );
   if (errs) return; /* (1) */
&nbsp;
   /* load a function */
   ZCslAddFunc(
      csl,                               /* handle */
      module,                            /* module name */
      &quot;average(const p1, &quot;               /* declaration */
              &quot;const p2, &quot;
             &quot;[const p3, &quot;
              &quot;const p4, &quot;
              &quot;const p5])&quot;,
      average);                          /* function address */
   /* no errs check since returning anyway */
} /* initialize */
&nbsp;
/*
 * c l e a n u p
 *
 * clean up csl library before unloading
 */
ZCslCleanupLib(csl)
{
   /* nothing to clean up in our sample */
} /* cleanup */
</pre>

</td>
</tr>
<!-- space -->
<tr>
<td colspan="9"><img src="../img/1pix.png" width="1" height="1" vspace="4"></td>
</tr>
<!-- fine line  -->
<tr valign="bottom">
<td></td>
<td width="5"><img src="../img/1pix.png" width="1" height="1"></td>
<td width="150" bgcolor="#0044AA"><img src="../img/1pix.png" width="1" height="1"></td>
<td width="10" bgcolor="#0044AA"><img src="../img/1pix.png" width="1" height="1"></td>
<td width="300%" bgcolor="#0044AA"><img src="../img/1pix.png" width="1" height="1"></td>
<td width="5"><img src="../img/1pix.png" width="1" height="1"></td>
<td></td>
</tr>
</table>
<!-- lower line -->
<table border="0" cellspacing="0" cellpadding="0" width="100%">
<tr>
<td></td>
<td width="5">&nbsp;</td>
<td width="25%">
<font size="-2">Copyright &copy; <A HREF="http://ibk-software.ch">IBK Landquart</font></td>
<td width="50%" align="center">
<font size="-2">Last revision: 27.05.2002
</font></td>
<td width="25%" align="right">
<font size="-2">&lt;&lt; <a href="capi2.htm">Back</a>&nbsp;&nbsp;<a href="#top">Top</a>&nbsp;&nbsp;<a href="capi41.htm">Next</a> &gt;&gt;</font></td>
<td width="5">&nbsp;</td>
<td></td>
</tr>
</table></div>
<a name="end"></a>
</body></html>
