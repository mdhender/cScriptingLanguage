# Copyright (c) 2001 IBK-Landquart-Switzerland. All rights reserved.
#
# Module      :  Makeprog
# Application :  IBK Open Class Library
# Purpose     :  Generic makefile for exe build
#
# Date        Description                                 Who
# --------------------------------------------------------------------------
# 2001.06.09  First implemention                          P.Koch, IBK
#
# OPEN SOURCE LICENSE
#
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 as published by
# the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
# more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to IBK at info@ibk-software.ch.

!ifdef TRACE
CDEFS = -DZC_TRACE_DEVELOP $(CDEFS)
!endif

CFLAGS = -q -tWCDE -K -I"$(INCDIR);$(SRCDIR);$(INCLUDE)" $(CDEFS) -c
LFLAGS = /q /c /Tpe /j"$(LIB)" /L"$(LIBDIR);$(LIB)" /m /M

.SUFFIXES: .obj .cpp .exe .rc .res

# rules for copying files

.exe{$(BINDIR)}.exe:
  @echo copy to $@
  @copy /y $< $@ >nul

.exe{$(IBINDIR)}.exe:
  @echo copy to $@
  @copy /y $< $@ >nul

# rules for compiling

{$(SRCDIR)}.cpp.obj:
  @bcc32 $(CFLAGS) $<

{$(ICONDIR)}.rc.res:
  @brcc32 -fo$@ -32 $<

#explicit rules

all : $(TARGETDIRS) $(TARGETS)

$(TARGETDIRS) :
  &@if not exist $* md $*

$(BINDIR)\$(TARGET).exe : $(TARGET).exe

$(IBINDIR)\$(TARGET).exe : $(TARGET).exe

$(TARGET).exe : $(OBJECTS) $(TARGET).res
  @echo linking $@
  @ilink32 $(LFLAGS) \
   c0x32 $(OBJECTS), \
   $@, \
   $(TARGET).map, \
   cw32 import32 $(LIBRARIES),, \
   $(TARGET).res

$(TARGET).res : $(ICONDIR)\$(TARGET).rc

$(OBJECTS): $(INCLUDES) makefile

CLEANUPS = \
  $(CLEANUPS) \
  $(OBJECTS) \
  $(TARGET).exe \
  $(TARGET).res \
  $(TARGET).map \
  $(TARGET).ilc \
  $(TARGET).ild \
  $(TARGET).ilf \
  $(TARGET).ils \
  $(TARGET).tds

clean :
  @for %f in ($(CLEANUPS)) do @if exist %f del %f
